{"ast":null,"code":"var _jsxFileName = \"/Users/isabelaselleck/Documents/GitHub/React-App-Isabela/src/components/Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { set } from \"mongoose\";\nimport { useState, useCallback } from \"react\";\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar({\n  initialMenuItems\n}) {\n  _s();\n  let [newMenuItem, setNewMenuItem] = useState(\"\");\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  let [menuItems, setMenuItems] = useState(initialMenuItems);\n  let [filter, setFilter] = useState(\"\");\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim()) {\n      setMenuItems(prevItems => [newMenuItem, ...prevItems]);\n      setNewMenuItem(\"\");\n    }\n  }, [newMenuItem]);\n\n  //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n  //   // This involves adding a parameter and changing a class instance variable (props).\n  //   setMenuItems([item, ...menuItems])\n\n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n\n  const filteredItems = menuItems.filter(item => item.toLowerCase().includes(filter.toLowerCase()) // Case-insensitive filtering\n  );\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newMenuItemValue\",\n      value: newMenuItem,\n      onChange: event => setNewMenuItem(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMenuItem,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"filter\",\n      type: \"text\",\n      value: filter,\n      onChange: event => setFilter(event.target.value),\n      placeholder: \"Filter by...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Sidebar, \"/oaa6lp+ngPTBrV4SYZja6S1wK0=\");\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["set","useState","useCallback","jsxDEV","_jsxDEV","Sidebar","initialMenuItems","_s","newMenuItem","setNewMenuItem","menuItems","setMenuItems","filter","setFilter","addMenuItem","trim","prevItems","filteredItems","item","toLowerCase","includes","children","type","id","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/isabelaselleck/Documents/GitHub/React-App-Isabela/src/components/Sidebar.jsx"],"sourcesContent":["import { set } from \"mongoose\"\nimport { useState, useCallback } from \"react\"\n/**\n * Renders an array of strings passed in that can be filtered and added to as an\n * unordered list.\n * @returns Component\n */\nexport default function Sidebar({ initialMenuItems }) {\n  let [newMenuItem, setNewMenuItem] = useState(\"\")\n  // TODO: 2 Using a state hook, maintain the current menu items as an array state.\n  let [menuItems, setMenuItems] = useState(initialMenuItems)\n  let [filter, setFilter] = useState(\"\")\n\n  // Adds a single string passed in as parameter to the state element\n  // \"menuItems\" that holds the set of current menu items.\n  let addMenuItem = useCallback(() => {\n    if (newMenuItem.trim ()) {\n      setMenuItems((prevItems) => [newMenuItem, ...prevItems]) \n      setNewMenuItem(\"\")\n    }\n  }, [newMenuItem])\n\n      //   // TODO: 3. Add a new menu item to the correct variable associated with this class.\n    //   // This involves adding a parameter and changing a class instance variable (props).\n    //   setMenuItems([item, ...menuItems])\n \n  // TODO: 4. Display ONLY the menu items that contain the filter element value\n  // \"term\" in them. Each menu item should be an unordered list item wrapped in an unordered list (ul) element.\n \n  const filteredItems = menuItems.filter((item) =>\n    item.toLowerCase().includes(filter.toLowerCase()) // Case-insensitive filtering\n  )\n\n  // TODO: 1 Render inside the outer div an unordered list of the menu items, with each string in the array\n  // its own item.\n  return (\n    <div>\n      <input\n        type=\"text\"\n        id=\"newMenuItemValue\"\n        value={newMenuItem}\n        onChange={(event) => setNewMenuItem(event.target.value)}\n      ></input>\n\n      <br />\n<ul> \n{filteredItems.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n</ul>\n\n      <button onClick={addMenuItem}>Add Item</button>\n\n      <br />\n      <input\n        id=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n        placeholder=\"Filter by...\"\n      ></input>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EACpD,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,IAAI,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACK,gBAAgB,CAAC;EAC1D,IAAI,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA,IAAIa,WAAW,GAAGZ,WAAW,CAAC,MAAM;IAClC,IAAIM,WAAW,CAACO,IAAI,CAAE,CAAC,EAAE;MACvBJ,YAAY,CAAEK,SAAS,IAAK,CAACR,WAAW,EAAE,GAAGQ,SAAS,CAAC,CAAC;MACxDP,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACD,WAAW,CAAC,CAAC;;EAEb;EACF;EACA;;EAEF;EACA;;EAEA,MAAMS,aAAa,GAAGP,SAAS,CAACE,MAAM,CAAEM,IAAI,IAC1CA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,MAAM,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;;EAED;EACA;EACA,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,kBAAkB;MACrBC,KAAK,EAAEhB,WAAY;MACnBiB,QAAQ,EAAGC,KAAK,IAAKjB,cAAc,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAET3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZ3B,OAAA;MAAAiB,QAAA,EACCJ,aAAa,CAACe,GAAG,CAAC,CAACd,IAAI,EAAEe,KAAK,kBACrB7B,OAAA;QAAAiB,QAAA,EAAiBH;MAAI,GAAZe,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEC3B,OAAA;MAAQ8B,OAAO,EAAEpB,WAAY;MAAAO,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/C3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN3B,OAAA;MACEmB,EAAE,EAAC,QAAQ;MACXD,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEZ,MAAO;MACda,QAAQ,EAAGC,KAAK,IAAKb,SAAS,CAACa,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MACnDW,WAAW,EAAC;IAAc;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CAxDuBF,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}